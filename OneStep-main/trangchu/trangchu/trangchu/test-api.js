// Script ƒë·ªÉ test API chi ti·∫øt s·∫£n ph·∫©m
const axios = require('axios');

const API_BASE = 'http://localhost:8080';

async function testChiTietSanPhamAPI() {
    console.log('üîç Testing Chi Ti·∫øt S·∫£n Ph·∫©m API...');
    
    try {
        const response = await axios.get(`${API_BASE}/chi-tiet-san-pham/hien-thi`);
        console.log('‚úÖ Chi Ti·∫øt S·∫£n Ph·∫©m API Response:');
        console.log(`üìä S·ªë l∆∞·ª£ng s·∫£n ph·∫©m: ${response.data.length}`);
        
        if (response.data.length > 0) {
            const firstProduct = response.data[0];
            console.log('üì¶ S·∫£n ph·∫©m ƒë·∫ßu ti√™n:');
            console.log(`   - ID: ${firstProduct.id || firstProduct.chiTietSanPhamId}`);
            console.log(`   - T√™n: ${firstProduct.tenSanPham || firstProduct.tenChiTiet}`);
            console.log(`   - Gi√°: ${firstProduct.giaTien || firstProduct.giaBan || 0}`);
            console.log(`   - Gi·∫£m gi√°: ${firstProduct.tienGiamGia || 0}`);
            console.log(`   - T·ªìn kho: ${firstProduct.soLuongTon || 0}`);
            console.log(`   - Th∆∞∆°ng hi·ªáu: ${firstProduct.thuongHieuTen || 'N/A'}`);
            console.log(`   - H√¨nh ·∫£nh: ${firstProduct.duongDanAnh || 'N/A'}`);
        }
        
        return response.data;
    } catch (error) {
        console.error('‚ùå L·ªói Chi Ti·∫øt S·∫£n Ph·∫©m API:', error.message);
        if (error.response) {
            console.error('   Status:', error.response.status);
            console.error('   Data:', error.response.data);
        }
        return null;
    }
}

async function testSanPhamAPI() {
    console.log('üîç Testing S·∫£n Ph·∫©m API (Fallback)...');
    
    try {
        const response = await axios.get(`${API_BASE}/san-pham/hien-thi`);
        console.log('‚úÖ S·∫£n Ph·∫©m API Response:');
        console.log(`üìä S·ªë l∆∞·ª£ng s·∫£n ph·∫©m: ${response.data.length}`);
        
        if (response.data.length > 0) {
            const firstProduct = response.data[0];
            console.log('üì¶ S·∫£n ph·∫©m ƒë·∫ßu ti√™n:');
            console.log(`   - ID: ${firstProduct.productId || firstProduct.id}`);
            console.log(`   - T√™n: ${firstProduct.tenSanPham}`);
            console.log(`   - Gi√°: ${firstProduct.giaBan || firstProduct.gia || 0}`);
            console.log(`   - Th∆∞∆°ng hi·ªáu: ${firstProduct.thuongHieuTen || 'N/A'}`);
        }
        
        return response.data;
    } catch (error) {
        console.error('‚ùå L·ªói S·∫£n Ph·∫©m API:', error.message);
        if (error.response) {
            console.error('   Status:', error.response.status);
            console.error('   Data:', error.response.data);
        }
        return null;
    }
}

async function testCORS() {
    console.log('üîç Testing CORS Configuration...');
    
    try {
        // Test v·ªõi origin t·ª´ frontend
        const response = await axios.get(`${API_BASE}/chi-tiet-san-pham/hien-thi`, {
            headers: {
                'Origin': 'http://localhost:5177'
            }
        });
        console.log('‚úÖ CORS OK - API c√≥ th·ªÉ truy c·∫≠p t·ª´ frontend');
        return true;
    } catch (error) {
        console.error('‚ùå CORS Error:', error.message);
        return false;
    }
}

async function runAllTests() {
    console.log('üöÄ B·∫Øt ƒë·∫ßu test API...\n');
    
    // Test CORS
    await testCORS();
    console.log('');
    
    // Test Chi Ti·∫øt S·∫£n Ph·∫©m API
    const chiTietData = await testChiTietSanPhamAPI();
    console.log('');
    
    // Test S·∫£n Ph·∫©m API n·∫øu chi ti·∫øt kh√¥ng c√≥ d·ªØ li·ªáu
    if (!chiTietData || chiTietData.length === 0) {
        await testSanPhamAPI();
    }
    
    console.log('üèÅ Test ho√†n th√†nh!');
}

// Ch·∫°y test n·∫øu file ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
    runAllTests().catch(console.error);
}

module.exports = {
    testChiTietSanPhamAPI,
    testSanPhamAPI,
    testCORS,
    runAllTests
};
